#!/bin/sh

# Ejecutar ESLint
echo "🔍 Ejecutando ESLint..."
npm run lint
if [ $? -ne 0 ]; then
    echo "❌ ESLint falló. Por favor corrige los problemas antes del commit."
    exit 1
fi

# Ejecutar pruebas con cobertura en formato JSON summary
echo "🧪 Ejecutando pruebas con cobertura..."
npx jest --config jest.config.cjs --coverage --coverageReporters=json-summary

# Verificar cobertura mínima usando Node.js para procesar el JSON summary
node -e "
const fs = require('fs');
const path = require('path');

// Leer el archivo de cobertura summary
const coveragePath = path.join(__dirname, 'coverage', 'coverage-summary.json');
const rawData = fs.readFileSync(coveragePath);
const coverageSummary = JSON.parse(rawData);

// Obtener los totales
const totals = coverageSummary.total;

const thresholds = {
  lines: 70,
  statements: 70,
  branches: 60,
  functions: 60
};

let failed = false;

for (const [key, threshold] of Object.entries(thresholds)) {
  const coverageValue = totals[key]?.pct;
  if (coverageValue === undefined) {
    console.error(\`❌ No se encontraron datos de cobertura para \${key}\`);
    failed = true;
  } else if (coverageValue < threshold) {
    console.error(\`❌ Cobertura de \${key} está por debajo del mínimo: \${coverageValue}% < \${threshold}%\`);
    failed = true;
  } else {
    console.log(\`✅ Cobertura de \${key}: \${coverageValue}% >= \${threshold}%\`);
  }
}

process.exit(failed ? 1 : 0);
"

if [ $? -ne 0 ]; then
    echo "❌ Verificación de cobertura falló. Por favor mejora la cobertura de pruebas antes del commit."
    exit 1
fi

# Verificar formateo con Prettier (nueva adición)
echo "💅 Ejecutando verificación de Prettier..."
npm run prettier:check
if [ $? -ne 0 ]; then
    echo "❌ Verificación de Prettier falló. Ejecuta 'npm run prettier:fix' para formatear tu código."
    exit 1
fi

echo "✅ ¡Todas las verificaciones pasaron! Procediendo con el commit..."